{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maymt/Desktop/try-tables/src/pages/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CardContent, Grid, Card, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { FilterList, Receipt, Close } from '@material-ui/icons';\nimport axios from 'axios';\nimport MUIDataTable from \"mui-datatables\";\nimport Navbar from '../components/Navbar';\nimport moment from 'moment';\nconst baseUrl = \"http://localhost:3001/\"; // const baseUrl = \"nobunaga:9999/apis_melon/data_despacho\";\n\nconst urlGuardar = \"http://10.175.3.134:9999/apis_melon/ns_simulador/insertar/\";\nconst urlSelect = \"http://10.175.3.134:9999/apis_melon/ns_simulador/select\";\nconst columnas = [{\n  name: 'Fecha',\n  label: 'Fecha',\n  options: {\n    filter: false,\n    sort: true\n  }\n}, {\n  name: 'cliente',\n  label: 'Rut',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'cliente_name',\n  label: 'Razón Social',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'obra',\n  label: 'Cod. Obra',\n  options: {\n    filter: false,\n    sort: true\n  }\n}, {\n  name: 'obra_name',\n  label: 'Nombre Obra',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'pedido',\n  label: 'Pedido',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, // { name: 'tren_pedido', label: 'Tren Pedido', options: { filter: false, sort: false } }, \n// { name: 'posicion_en_tren', label: 'Posición Tren', options: { filter: false, sort: false } }, \n{\n  name: 'Guia_despacho',\n  label: 'Guía Despacho',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'planta',\n  label: 'Planta',\n  options: {\n    filter: false,\n    sort: true\n  }\n}, // { name: 'producto_codigo', label: 'Cod. Producto', options: { filter: false, sort: false } }, \n{\n  name: 'producto',\n  label: 'Producto',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'm3',\n  label: 'Volumen',\n  options: {\n    filter: true,\n    sort: false,\n    filterType: 'multiselect'\n  }\n}, // { name: 'camion', label: 'Camión', options: { filter: false, sort: false } }, \n// { name: 'contratista', label: 'Contratista', options: { filter: false, sort: false }}, \n{\n  name: 'hora_solicitada_cliente_original',\n  label: 'Hora Solicitada',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'hora_solicitada_cliente_primer_despacho_de_tren',\n  label: 'Hora 1er Tren',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'hora_solicitada_cliente_corregida',\n  label: 'Hora Corregida',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'espaciamiento',\n  label: 'Espaciamiento',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, // { name: 'tiempo_viaje_vuelta_proyectado', label: 'Tiempo Ida', options: { filter: false, sort: false } }, \n// { name: 'tiempo_ida_vuelta_proyectado', label: 'Tiempo Vuelta', options: { filter: false, sort: false } }, \n// { name: 'hora_tiquete', label: 'Hora Tiquete', options: { filter: false, sort: false } }, \n// { name: 'hora_de_carga', label: 'Hora Inicio Carga', options: { filter: false, sort: false } }, \n// { name: 'hora_fin_de_carga', label: 'Hora Fin Carga', options: { filter: false, sort: false } }, \n// { name: 'hora_salida_de_planta', label: 'Hora Salida Planta', options: { filter: false, sort: false } }, \n{\n  name: 'hora_llegada_a_obra',\n  label: 'Hora Llegada Obra',\n  options: {\n    filter: false,\n    sort: false,\n    filterType: 'multiselect'\n  }\n}, // { name: 'hora_inicio_descarga', label: 'Hora Inicio Descarga', options: { filter: false, sort: false } }, \n{\n  name: 'hora_salida_a_planta',\n  label: ' Hora Salida Obra',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, // { name: 'hora_llegada_a_planta', label: 'Hora Llegada Planta', options: { filter: false, sort: false } },\n{\n  name: 'direccion',\n  label: 'Dirección',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, // { name: 'cuadrante', label: 'Cuadrante', options: { filter: false, sort: false } }, \n// { name: 'anillo', label: 'Anillo', options: { filter: false, sort: false } }, \n// { name: 'costo_produccion', label: 'Costo Producción', options: { filter: false, sort: false } }, \n{\n  name: 'codigo_remosion_pedido',\n  label: 'Cod. Remosión Pedido',\n  options: {\n    filter: true,\n    sort: false,\n    filterType: 'multiselect'\n  }\n}, {\n  name: 'codigo_remosion_tren',\n  label: 'Cod. Remosión Tren',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'codigo_remosion_tren',\n  label: 'Cod. Remosión Tren',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'codigo_remosion_linea',\n  label: 'Cod. Remosión Línea',\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: 'codigo_remosion_fuera_plazo',\n  label: 'Cod. Remosión FP',\n  options: {\n    filter: false,\n    sort: false,\n    filterType: 'multiselect'\n  }\n}, // { name: 'm3_a_botadero', label: 'M3 Botadero', options: { filter: false, sort: false } }, \n// { name: 'm3_a_redestino', label: 'M3 Redestino', options: { filter: false, sort: true } },\n{\n  name: 'puntual',\n  label: '¿Puntual?',\n  options: {\n    filter: true,\n    sort: false\n  }\n}, {\n  name: 'atraso',\n  label: 'Atraso',\n  options: {\n    filter: true,\n    sort: false\n  }\n}, {\n  name: 'estadia_esperada',\n  label: 'Estadía Esperada',\n  options: {\n    filter: true,\n    sort: false\n  }\n}, {\n  name: 'estadia_real',\n  label: 'Estadía Real',\n  options: {\n    filter: true,\n    sort: false\n  }\n}, {\n  name: 'min_adicionales',\n  label: 'Minutos Sobrestadía',\n  options: {\n    filter: true,\n    sort: false\n  }\n} // { name: 'min_diferencia', label: 'Total Minutos', options: { filter: true, sort: false } }, \n// { name: 'tramos', label: 'Tramos', options: { filter: true, sort: false } }, \n// { name: 'monto', label: 'Monto', options: { filter: true, sort: false } }\n];\nconst options = {\n  rowsPerPage: 10,\n  filterType: 'textField',\n  download: 'false',\n  print: 'false',\n  search: 'false',\n  fixedColumns: 2\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'left',\n    background: 'white',\n    paddingBottom: '20px',\n    alignContent: 'center'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    width: 200\n  },\n  button: {\n    fontSize: 14,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    margin: '20px'\n  },\n  card: {\n    textAlign: 'center',\n    padding: '10px',\n    margin: '20px'\n  },\n  texto: {\n    fontSize: 16,\n    textAlign: 'left',\n    fontWeight: 'medium'\n  },\n  titulo: {\n    fontWeight: 'bold',\n    fontSize: 22,\n    marginBottom: '10px'\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [resumen, setResumen] = useState([]);\n  const [facturado, setFacturado] = useState([]);\n  const [obraSeleccionado, setObraSeleccionado] = useState({\n    //Datos que se ponen en los inputs\n    fecha_inicio: \"\",\n    fecha_fin: \"\",\n    obra_oc: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setObraSeleccionado(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const peticionGet = async () => {\n    var hoy = moment().get('year') + \"-\" + (moment().get('month') + 1) + \"-\" + (moment().get('day') - 1);\n    hoy = moment(hoy, 'YYYY-MM-dd');\n    hoy = hoy._i;\n    var inicio = moment().subtract(1, 'months');\n    inicio = moment(inicio).get('year') + \"-\" + moment(inicio).get('month') + \"-\" + moment(inicio).get('day');\n    inicio = moment(inicio, 'YYYY-MM-dd');\n    inicio = inicio._i;\n    await axios.get(baseUrl + \"datos\") // await axios.get(baseUrl+\"/\"+inicio+\"/\"+hoy)\n    .then(response => {\n      // console.log(response.data)\n      setData(response.data);\n      console.log(data);\n    }).catch(error => {\n      console.log(error);\n    });\n    var resumen = [];\n    setResumen(resumen);\n  };\n\n  function filtrarDatos(data, fecha_inicio, fecha_fin, obra) {\n    //filtra los datos por obra y fecha, genera los datos del resumen\n    let x;\n    const rows = []; // pedidos de la obra y fechas seleccionadas\n\n    var resumen = []; // datos tabla resumenº\n\n    var adicionales_suma = 0; //suma de los minutos adicionales\n\n    var atraso_suma = 0; //suma de los minutos de atraso\n\n    var diferencia = 0; //diferencia entre atrasos y minutos adicionales.\n\n    var tramos = 0; // tramos de 15 minutos en la diferencia\n\n    var monto = 0; // monto que se debería facturar\n\n    var puntual = 0;\n    var atraso = 0;\n    var estadia_esperada = 0;\n    var estadia_real = 0;\n    var min_adicionales = 0;\n    var min_diferencia = 0;\n\n    for (x in data) {\n      if (data[x][3] !== null) {\n        if (data[x][3].includes(obra) && data[x][0] >= fecha_inicio && data[x][0] <= fecha_fin || data[x][3].includes(obra) && data[x][0] === fecha_inicio) {\n          // console.log(data[x]);\n          // data[x].splice(6,1);\n          // console.log(data[x]);\n          rows.push(data[x]);\n          var solicitada = data[x][10]; //hora solicitada original.\n\n          var llegada = data[x][14]; //hora de llegada a la obra.\n\n          var salida = data[x][15]; // hora de salida de la obra.\n\n          estadia_esperada = 15 + data[x][9] * 6 + 10; //estadia esperada calculada en base al volumen pedido + los 15 minutos de posicionamiento y 10 min de lavado.\n\n          if (solicitada !== null && llegada !== null && salida !== null) {\n            solicitada = parseInt(solicitada.substring(0, 2)) * 3600 + parseInt(solicitada.substring(3, 6)) * 60 + parseInt(solicitada.substring(7, 8));\n            llegada = parseInt(llegada.substring(0, 2)) * 3600 + parseInt(llegada.substring(3, 6)) * 60 + parseInt(llegada.substring(7, 8));\n            salida = parseInt(salida.substring(0, 2)) * 3600 + parseInt(salida.substring(3, 6)) * 60 + parseInt(salida.substring(7, 8));\n            estadia_real = Math.ceil((salida - llegada) / 60);\n\n            if (Math.abs(llegada - solicitada) > 1800) {\n              atraso = Math.abs(llegada - solicitada - 1800); //1800 s = 30 minutos rango puntualidad\n\n              atraso = Math.ceil(atraso / 60);\n              atraso_suma = atraso_suma + atraso;\n              puntual = \"No\";\n            } else {\n              atraso = 0;\n              puntual = \"Si\";\n            }\n\n            ;\n\n            if (estadia_real > estadia_esperada && puntual === \"Si\") {\n              min_adicionales = estadia_real - estadia_esperada;\n              min_adicionales = Math.ceil(min_adicionales);\n              adicionales_suma = adicionales_suma + min_adicionales;\n            } else {\n              min_adicionales = 0;\n            }\n\n            if (min_adicionales > atraso) {\n              min_diferencia = min_adicionales - atraso;\n            } else {\n              min_diferencia = atraso - min_adicionales;\n              min_diferencia = min_diferencia + \" Minutos a favor\";\n            } // console.log(\"Puntual? : \", puntual, \" - Atraso: \", atraso, \" - Adicionales: \", min_adicionales);      \n\n          }\n\n          ;\n        }\n\n        ;\n      }\n\n      if (estadia_real > estadia_esperada) {\n        var sobrestadia = estadia_real - estadia_esperada;\n      } else {\n        var sobrestadia = 0;\n      }\n\n      data[x].push(puntual);\n      data[x].push(atraso);\n      data[x].push(estadia_esperada);\n      data[x].push(estadia_real);\n      data[x].push(sobrestadia);\n    }\n\n    ;\n    setData(rows); // console.log(\"Impuntualidad: \", atraso_suma, \" - Sobrestadia: \", adicionales_suma, \" - Tramos: \", tramos, \" - Monto = \", monto);\n\n    if (adicionales_suma > atraso_suma) {\n      diferencia = adicionales_suma - atraso_suma + \" Minutos\";\n      tramos = Math.floor((adicionales_suma - atraso_suma) / 15);\n      monto = tramos * 0.5;\n    } else {\n      diferencia = \"Acumula \" + (atraso_suma - adicionales_suma) + \" minutos en su próximo pedido\";\n      tramos = 0;\n      monto = 0;\n    }\n\n    resumen = [obra, atraso_suma, adicionales_suma, diferencia, tramos, monto];\n    setResumen(resumen); // console.log(resumen);\n  }\n\n  const guardarFacturado = async () => {\n    await axios.get(urlGuardar + resumen[0] + \"/\" + resumen[5] + \"/\" + resumen[3]);\n  }; // console.log(urlGuardar + resumen[0] + \"/\" + resumen[5]);\n\n\n  function getFacturado(obra) {\n    const select = async () => {\n      await axios.get(urlSelect).then(response => {\n        setFacturado(response.data);\n      });\n    };\n\n    let x;\n    var fechasObra = [];\n\n    for (x in facturado) {\n      if (facturado[x][1] === obra) {\n        fechasObra.push(facturado[x][1]);\n      }\n    }\n\n    setFacturado(fechasObra[fechasObra.length - 1]);\n  }\n\n  useEffect(() => {\n    peticionGet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        md: 5,\n        lg: 5,\n        xl: 5,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.titulo,\n              children: \"Resumen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.texto,\n              children: [\"Obra:               \", resumen[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.texto,\n              children: [\"Impuntualidad Mel\\xF3n: \", resumen[1], \" Minutos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.texto,\n              children: [\"Sobrestad\\xEDa: \", resumen[2], \" Minutos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.texto,\n              children: [\"Diferencia: \", resumen[3]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.texto,\n              children: [\"Tramos de 15min: \", resumen[4]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.texto,\n              children: [\"Monto: \", resumen[5], \" UF\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              startIcon: /*#__PURE__*/_jsxDEV(Receipt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 30\n              }, this),\n              onClick: () => guardarFacturado(),\n              children: \"Facturado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.texto,\n              children: [\"\\xDAltima Facturaci\\xF3n: \", () => getFacturado(resumen[0])]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 7,\n        md: 7,\n        lg: 7,\n        xl: 7,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.titulo,\n              children: \"Filtros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                className: classes.textField,\n                name: \"obra_oc\",\n                label: \"Obra: \",\n                onChange: handleChange,\n                value: obraSeleccionado && obraSeleccionado.obra_oc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"fecha_inicio\",\n                label: \"Desde: \",\n                type: \"date\",\n                defaultValue: \"2019-09-13\",\n                className: classes.textField,\n                InputLabelProps: {\n                  shrink: true\n                },\n                onChange: handleChange,\n                value: obraSeleccionado && obraSeleccionado.fecha_inicio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"fecha_fin\",\n                label: \"Hasta: \",\n                type: \"date\",\n                defaultValue: \"\",\n                className: classes.textField,\n                InputLabelProps: {\n                  shrink: true\n                },\n                onChange: handleChange,\n                value: obraSeleccionado && obraSeleccionado.fecha_fin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.button,\n                startIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 28\n                }, this),\n                onClick: () => (filtrarDatos(data, obraSeleccionado.fecha_inicio, obraSeleccionado.fecha_fin, obraSeleccionado.obra_oc), getFacturado(obraSeleccionado.obra_oc)),\n                children: \"Filtrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                startIcon: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 28\n                }, this),\n                onClick: () => peticionGet(),\n                children: \"Limpiar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n            title: \"Pedidos\",\n            data: data,\n            columns: columnas,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nKsbmrR0HLa1NU8acLrv3J+PxdA=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maymt/Desktop/try-tables/src/pages/App.js"],"names":["React","useState","useEffect","CardContent","Grid","Card","Typography","makeStyles","TextField","Button","FilterList","Receipt","Close","axios","MUIDataTable","Navbar","moment","baseUrl","urlGuardar","urlSelect","columnas","name","label","options","filter","sort","filterType","rowsPerPage","download","print","search","fixedColumns","useStyles","theme","root","textAlign","background","paddingBottom","alignContent","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","button","fontSize","fontWeight","margin","card","padding","texto","titulo","marginBottom","App","classes","data","setData","resumen","setResumen","facturado","setFacturado","obraSeleccionado","setObraSeleccionado","fecha_inicio","fecha_fin","obra_oc","handleChange","e","value","target","prevState","peticionGet","hoy","get","_i","inicio","subtract","then","response","console","log","catch","error","filtrarDatos","obra","x","rows","adicionales_suma","atraso_suma","diferencia","tramos","monto","puntual","atraso","estadia_esperada","estadia_real","min_adicionales","min_diferencia","includes","push","solicitada","llegada","salida","parseInt","substring","Math","ceil","abs","sobrestadia","floor","guardarFacturado","getFacturado","select","fechasObra","length","shrink"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CardContent, Grid , Card, Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {FilterList, Receipt, Close} from '@material-ui/icons';\nimport axios from 'axios';\nimport MUIDataTable from \"mui-datatables\";\nimport Navbar from  '../components/Navbar';\nimport moment from 'moment';\n\n\n\nconst baseUrl = \"http://localhost:3001/\";\n// const baseUrl = \"nobunaga:9999/apis_melon/data_despacho\";\n\nconst urlGuardar=\"http://10.175.3.134:9999/apis_melon/ns_simulador/insertar/\";\nconst urlSelect=\"http://10.175.3.134:9999/apis_melon/ns_simulador/select\";\n\n\nconst columnas = [\n  { name: 'Fecha', label: 'Fecha', options: { filter: false, sort: true } },\n  { name: 'cliente', label: 'Rut', options: { filter: false, sort: false } }, \n  { name: 'cliente_name', label: 'Razón Social', options: { filter: false, sort: false } }, \n  { name: 'obra', label: 'Cod. Obra', options: { filter: false, sort: true } }, \n  { name: 'obra_name', label: 'Nombre Obra', options: { filter: false, sort: false } }, \n  { name: 'pedido', label: 'Pedido', options: { filter: false, sort: false } }, \n  // { name: 'tren_pedido', label: 'Tren Pedido', options: { filter: false, sort: false } }, \n  // { name: 'posicion_en_tren', label: 'Posición Tren', options: { filter: false, sort: false } }, \n  { name: 'Guia_despacho', label: 'Guía Despacho', options: { filter: false, sort: false } }, \n  { name: 'planta', label: 'Planta', options: { filter: false, sort: true } }, \n  // { name: 'producto_codigo', label: 'Cod. Producto', options: { filter: false, sort: false } }, \n  { name: 'producto', label: 'Producto', options: { filter: false, sort: false } }, \n  { name: 'm3', label: 'Volumen', options: { filter: true, sort: false, filterType: 'multiselect' } }, \n  // { name: 'camion', label: 'Camión', options: { filter: false, sort: false } }, \n  // { name: 'contratista', label: 'Contratista', options: { filter: false, sort: false }}, \n  { name: 'hora_solicitada_cliente_original', label: 'Hora Solicitada', options: { filter: false, sort: false } }, \n  { name: 'hora_solicitada_cliente_primer_despacho_de_tren', label: 'Hora 1er Tren', options: { filter: false, sort: false } }, \n  { name: 'hora_solicitada_cliente_corregida', label: 'Hora Corregida', options: { filter: false, sort: false } }, \n  { name: 'espaciamiento', label: 'Espaciamiento', options: { filter: false, sort: false } }, \n  // { name: 'tiempo_viaje_vuelta_proyectado', label: 'Tiempo Ida', options: { filter: false, sort: false } }, \n  // { name: 'tiempo_ida_vuelta_proyectado', label: 'Tiempo Vuelta', options: { filter: false, sort: false } }, \n  // { name: 'hora_tiquete', label: 'Hora Tiquete', options: { filter: false, sort: false } }, \n  // { name: 'hora_de_carga', label: 'Hora Inicio Carga', options: { filter: false, sort: false } }, \n  // { name: 'hora_fin_de_carga', label: 'Hora Fin Carga', options: { filter: false, sort: false } }, \n  // { name: 'hora_salida_de_planta', label: 'Hora Salida Planta', options: { filter: false, sort: false } }, \n  { name: 'hora_llegada_a_obra', label: 'Hora Llegada Obra', options: { filter: false, sort: false, filterType: 'multiselect'} }, \n  // { name: 'hora_inicio_descarga', label: 'Hora Inicio Descarga', options: { filter: false, sort: false } }, \n  { name: 'hora_salida_a_planta', label: ' Hora Salida Obra', options: { filter: false, sort: false } },\n  // { name: 'hora_llegada_a_planta', label: 'Hora Llegada Planta', options: { filter: false, sort: false } },\n  { name: 'direccion', label: 'Dirección', options: { filter: false, sort: false } }, \n  // { name: 'cuadrante', label: 'Cuadrante', options: { filter: false, sort: false } }, \n  // { name: 'anillo', label: 'Anillo', options: { filter: false, sort: false } }, \n  // { name: 'costo_produccion', label: 'Costo Producción', options: { filter: false, sort: false } }, \n  { name: 'codigo_remosion_pedido', label: 'Cod. Remosión Pedido', options: { filter: true, sort: false, filterType: 'multiselect' } },\n  { name: 'codigo_remosion_tren', label: 'Cod. Remosión Tren', options: { filter: false, sort: false } }, \n  { name: 'codigo_remosion_tren', label: 'Cod. Remosión Tren', options: { filter: false, sort: false } }, \n  { name: 'codigo_remosion_linea', label: 'Cod. Remosión Línea', options: { filter: false, sort: false } }, \n  { name: 'codigo_remosion_fuera_plazo', label: 'Cod. Remosión FP', options: { filter: false, sort: false, filterType: 'multiselect' } }, \n  // { name: 'm3_a_botadero', label: 'M3 Botadero', options: { filter: false, sort: false } }, \n  // { name: 'm3_a_redestino', label: 'M3 Redestino', options: { filter: false, sort: true } },\n  { name: 'puntual', label: '¿Puntual?', options: { filter: true, sort: false } }, \n  { name: 'atraso', label: 'Atraso', options: { filter: true, sort: false } }, \n  { name: 'estadia_esperada', label: 'Estadía Esperada', options: { filter: true, sort: false } }, \n  { name: 'estadia_real', label: 'Estadía Real', options: { filter: true, sort: false } },\n  { name: 'min_adicionales', label: 'Minutos Sobrestadía', options: { filter: true, sort: false } }, \n  // { name: 'min_diferencia', label: 'Total Minutos', options: { filter: true, sort: false } }, \n  // { name: 'tramos', label: 'Tramos', options: { filter: true, sort: false } }, \n  // { name: 'monto', label: 'Monto', options: { filter: true, sort: false } }\n];\n\n\n const options = {\n  rowsPerPage: 10,\n  filterType: 'textField',\n  download: 'false',\n  print: 'false',\n  search: 'false',\n  fixedColumns: 2\n };\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'left',\n    background: 'white',\n    paddingBottom: '20px',\n    alignContent: 'center'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    width: 200,\n  },\n  button:{\n    fontSize: 14,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    margin: '20px'\n  },\n  card:{\n    textAlign: 'center',\n    padding: '10px',\n    margin: '20px'\n  },\n  texto:{\n      fontSize: 16,\n      textAlign: 'left',\n      fontWeight: 'medium'\n  },\n  titulo:{\n      fontWeight: 'bold',\n      fontSize: 22,\n      marginBottom: '10px'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [resumen, setResumen] = useState([]);\n  const [facturado, setFacturado] = useState([]);\n  \n  const [obraSeleccionado, setObraSeleccionado]=useState({ //Datos que se ponen en los inputs\n    fecha_inicio: \"\",\n    fecha_fin: \"\",\n    obra_oc: \"\"\n  })\n\n  const handleChange=e=>{\n    const {name, value}=e.target;\n    setObraSeleccionado(prevState=>({\n      ...prevState,\n      [name]: value\n    }));\n  }\n\n  const peticionGet=async()=>{\n    var hoy = moment().get('year')+\"-\"+(moment().get('month') + 1)+\"-\"+(moment().get('day') - 1);\n    hoy = moment(hoy, 'YYYY-MM-dd');\n    hoy = hoy._i;\n\n    var inicio = moment().subtract(1, 'months');\n    inicio = moment(inicio).get('year')+\"-\"+moment(inicio).get('month')+\"-\"+moment(inicio).get('day');\n    inicio = moment(inicio, 'YYYY-MM-dd');\n    inicio = inicio._i;\n    \n    await axios.get(baseUrl+\"datos\")\n    // await axios.get(baseUrl+\"/\"+inicio+\"/\"+hoy)\n    .then(response=>{\n      // console.log(response.data)\n      setData(response.data);\n      console.log(data);\n    }).catch(error=>{\n      console.log(error);\n    })\n    var resumen = [];\n    setResumen(resumen);\n  }\n\n  function filtrarDatos(data, fecha_inicio, fecha_fin, obra) { //filtra los datos por obra y fecha, genera los datos del resumen\n    let x;\n    \n    const rows = []; // pedidos de la obra y fechas seleccionadas\n    var resumen = []; // datos tabla resumenº\n\n    var adicionales_suma = 0; //suma de los minutos adicionales\n    var atraso_suma = 0; //suma de los minutos de atraso\n    var diferencia = 0; //diferencia entre atrasos y minutos adicionales.\n    var tramos = 0; // tramos de 15 minutos en la diferencia\n    var monto = 0; // monto que se debería facturar\n\n    var puntual = 0;\n    var atraso = 0;\n    var estadia_esperada = 0;\n    var estadia_real = 0;\n    var min_adicionales = 0;\n    var min_diferencia = 0;\n\n    for (x in data){\n      if (data[x][3] !== null) {\n        \n        if ((data[x][3].includes(obra) && data[x][0] >= fecha_inicio && data[x][0] <= fecha_fin) || (data[x][3].includes(obra) && data[x][0] === fecha_inicio)) {\n          // console.log(data[x]);\n          // data[x].splice(6,1);\n          // console.log(data[x]);\n          rows.push(data[x]);\n          \n          var solicitada = data[x][10]; //hora solicitada original.\n          var llegada = data[x][14]; //hora de llegada a la obra.\n          var salida = data[x][15]; // hora de salida de la obra.\n          estadia_esperada = 15 + data[x][9] * 6 + 10; //estadia esperada calculada en base al volumen pedido + los 15 minutos de posicionamiento y 10 min de lavado.\n\n          if (solicitada !== null && llegada !== null && salida !== null) {\n            solicitada = parseInt(solicitada.substring(0,2)) * 3600 + parseInt(solicitada.substring(3,6)) * 60 + parseInt(solicitada.substring(7,8));\n            llegada = parseInt(llegada.substring(0,2)) * 3600 + parseInt(llegada.substring(3,6)) * 60 + parseInt(llegada.substring(7,8));\n            salida = parseInt(salida.substring(0,2)) * 3600 + parseInt(salida.substring(3,6)) * 60 + parseInt(salida.substring(7,8));\n\n            estadia_real = Math.ceil((salida - llegada) / 60);\n\n            if (Math.abs(llegada - solicitada) > 1800) {\n              atraso =  Math.abs((llegada - solicitada) - 1800 ) ; //1800 s = 30 minutos rango puntualidad\n              atraso = Math.ceil(atraso / 60);\n              atraso_suma = atraso_suma + atraso;\n              puntual = \"No\";\n    \n    \n            } else{\n              atraso = 0;\n              puntual = \"Si\";\n            };\n\n            if (estadia_real > estadia_esperada && puntual === \"Si\"){\n              min_adicionales = estadia_real - estadia_esperada;\n              min_adicionales = Math.ceil(min_adicionales);\n              adicionales_suma = adicionales_suma + min_adicionales;\n            } else {\n              min_adicionales = 0;\n            }\n      \n            if (min_adicionales > atraso) {\n              min_diferencia = min_adicionales - atraso;\n            } else {\n              min_diferencia = (atraso - min_adicionales);\n              min_diferencia = min_diferencia + \" Minutos a favor\";\n            }\n      \n            // console.log(\"Puntual? : \", puntual, \" - Atraso: \", atraso, \" - Adicionales: \", min_adicionales);      \n          };\n        };\n      }\n\n      if (estadia_real > estadia_esperada) {\n        var sobrestadia = estadia_real - estadia_esperada;\n      } else {\n        var sobrestadia = 0;\n      }\n      data[x].push(puntual);  \n      data[x].push(atraso);\n      data[x].push(estadia_esperada);\n      data[x].push(estadia_real);\n      data[x].push(sobrestadia);\n    };\n\n    setData(rows);\n\n    // console.log(\"Impuntualidad: \", atraso_suma, \" - Sobrestadia: \", adicionales_suma, \" - Tramos: \", tramos, \" - Monto = \", monto);\n    \n    if (adicionales_suma > atraso_suma) {\n      diferencia = (adicionales_suma - atraso_suma) + \" Minutos\";\n      tramos = Math.floor((adicionales_suma - atraso_suma) / 15);\n      monto = tramos * 0.5;\n    } else {\n      diferencia = \"Acumula \" + (atraso_suma - adicionales_suma) + \" minutos en su próximo pedido\";\n      tramos = 0;\n      monto = 0;\n    }\n\n    resumen = [ obra, atraso_suma, adicionales_suma, diferencia, tramos, monto ];\n    \n    setResumen(resumen);\n    // console.log(resumen);\n  }\n\n\n  const guardarFacturado = async()=>{\n    await axios.get(urlGuardar + resumen[0] + \"/\" + resumen[5] + \"/\" + resumen[3])\n  }\n  // console.log(urlGuardar + resumen[0] + \"/\" + resumen[5]);\n\n  function getFacturado (obra) {\n    const select = async()=>{\n      await axios.get(urlSelect)\n      .then(response=>{\n        setFacturado(response.data);\n      })\n    }\n    \n    let x;\n    var fechasObra = [];\n\n    for (x in facturado) {\n      if ( facturado[x][1] === obra ){\n        fechasObra.push(facturado[x][1]);\n      }\n    }\n\n    setFacturado(fechasObra[fechasObra.length -1]);\n  }\n  \n\n\n  useEffect(()=>{\n    peticionGet();\n  }, [])\n\n\n  return (\n    <div className={classes.root}>\n\n      <Grid item xs = {12}>\n        <Navbar/>\n      </Grid>\n\n\n      <Grid container spacing = {0}>\n        \n        <Grid item xs={12} sm={5} md={5} lg={5} xl={5}>\n          <Card className={classes.card}>\n            <CardContent>\n\n              <Typography className={classes.titulo}>\n                Resumen\n              </Typography>\n\n              <br></br>\n              \n              <Typography className={classes.texto}>\n                Obra:               {resumen[0]}\n              </Typography>\n\n              <Typography className={classes.texto}>\n                Impuntualidad Melón: {resumen[1]} Minutos\n              </Typography>\n\n              <Typography className={classes.texto}>\n                Sobrestadía: {resumen[2]} Minutos\n              </Typography>\n\n              <Typography className={classes.texto}>\n                Diferencia: {resumen[3]}\n              </Typography>\n\n              <Typography className={classes.texto}>\n                Tramos de 15min: {resumen[4]}\n              </Typography>\n\n              <Typography className={classes.texto}>\n                Monto: {resumen[5]} UF\n              </Typography>\n              \n              <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  startIcon={<Receipt />}\n                  onClick={()=> guardarFacturado()}\n                  >\n                  Facturado\n              </Button>\n\n              <Typography className={classes.texto}>\n                Última Facturación: {()=> getFacturado(resumen[0])}\n              </Typography>\n\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={7} md={7} lg={7} xl={7}>\n          <Card className={classes.card}>\n            <CardContent>\n\n              <Typography className={classes.titulo}>\n                Filtros\n              </Typography>\n              \n            <br></br>\n            <br></br>\n            <br></br>\n\n            <Grid item xs={12}>\n              <TextField className={classes.textField}\n                name=\"obra_oc\"\n                label=\"Obra: \"\n                onChange={handleChange}\n                value={obraSeleccionado&&obraSeleccionado.obra_oc}\n              />\n\n              <TextField\n                name=\"fecha_inicio\"\n                label=\"Desde: \"\n                type=\"date\"\n                defaultValue=\"2019-09-13\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={handleChange}\n                value={obraSeleccionado&&obraSeleccionado.fecha_inicio}\n              />\n\n              <TextField\n                name=\"fecha_fin\"\n                label=\"Hasta: \"\n                type=\"date\"\n                defaultValue=\"\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={handleChange}\n                value={obraSeleccionado&&obraSeleccionado.fecha_fin}\n              />\n            </Grid>\n\n            <br></br>\n            <br></br>\n            <br></br>\n\n\n            <Grid item xs={12}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<FilterList />}\n                onClick={()=> (filtrarDatos(data, obraSeleccionado.fecha_inicio, obraSeleccionado.fecha_fin, obraSeleccionado.obra_oc), getFacturado(obraSeleccionado.obra_oc)) }\n              >\n                Filtrar\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<Close />}\n                onClick={()=> peticionGet()}\n              >\n                Limpiar\n              </Button>\n\n            </Grid>\n\n            </CardContent>\n          </Card>\n        </Grid>\n        \n      </Grid>\n\n      <Grid item xs = {12}>\n        <Card className={classes.root}>\n          <CardContent>\n            <MUIDataTable\n              title={\"Pedidos\"}\n              data={data}\n              columns={columnas}\n              options={options}\n            />\n          </CardContent>\n        </Card>\n      </Grid>\n      \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}